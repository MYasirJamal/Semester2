Task 1:




#include <iostream>

using namespace std;

class overload{
	public:
    	int x;
		overload operator --()
		{
			overload obj;
			x*=4;
			obj.x=x;
			return obj;
		}
};

int main()
{
	overload obj1,obj2;
	obj1.x=5;
	obj2=--obj1;
	cout<<obj2.x;
	
	return 1;
}










Task 2:











#include <iostream>

using namespace std;

class shape{
	public:
		int x,y,area;
		void Area()
		{
			area=x*y;
		}
		shape operator + (const shape &obj)
		{
			shape temp;
			temp.area=area+obj.area;
			return temp;
		}
};

int main()
{
	shape obj1,obj2,obj3;
	obj1.x=4;
	obj1.y=5;
	obj1.Area();
	obj2.x=2;
	obj2.y=10;
	obj2.Area();
	obj3=obj2+obj1;
	cout<<obj3.area;
}









Task 3:









#include <iostream>

using namespace std;

class Perimeter{
	int l,b,perimeter;
	public:
		void setDimensions(int len, int bre)
		{
			l=len;
			b=bre;
		}
		void calculatePerimeter()
		{
			perimeter = 2*l + 2*b;
		}
		friend class printClass;
};

class printClass{
	public:
	void print(const Perimeter &obj)
	{
		cout<<obj.perimeter;
	}
};

int main()
{
	Perimeter obj1;
	printClass obj2;
	obj1.setDimensions(5,4);
	obj1.calculatePerimeter();
	obj2.print(obj1);
}